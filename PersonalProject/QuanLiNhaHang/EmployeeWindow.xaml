<Window x:Class="QuanLiNhaHang.EmployeeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QuanLiNhaHang"
        xmlns:Converter="clr-namespace:QuanLiNhaHang.Converter"
        mc:Ignorable="d"
        
        
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
            xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
            TextElement.Foreground="{DynamicResource MaterialDesignBody}"
            TextElement.FontWeight="Regular"
            TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        DataContext="{StaticResource EmployeeVM}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        WindowStartupLocation="CenterScreen"
        Title="EmployeeWindow" Height="450" Width="800">

    <Window.Resources>
        <Converter:StatusAccountConverter x:Key="StatusAccountConverter" />
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="*"/>

        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition ></RowDefinition>
            </Grid.RowDefinitions>

            <StackPanel Margin="10" Orientation="Horizontal" Grid.Row="0">
                <Label Width="50">Search Staff:</Label>
                <TextBox  Width="200" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding FilterCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </StackPanel>
            <materialDesign:Card Grid.Row="1" VerticalAlignment="Stretch" Margin="5">
                <DataGrid Name="dgvDisplay" AutoGenerateColumns="False" CanUserAddRows="False"
                ItemsSource="{Binding List}" SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="*" Header="ID" Binding="{Binding Path=AccountId}" IsReadOnly="True"/>
                        <DataGridTextColumn Width="*" Header="FullName" Binding="{Binding Path=FullName}" IsReadOnly="True" />
                        <DataGridTextColumn Width="*" Header="Email" Binding="{Binding Path=Email}" IsReadOnly="True"/>
                        <DataGridTextColumn Width="*" Header="PassWord" Binding="{Binding Path=Password}" IsReadOnly="True"/>
                        <DataGridCheckBoxColumn Width="*" Header="Gender" Binding="{Binding Path=Gender}" IsReadOnly="True"/>
                        <DataGridTextColumn Width="*" Header="Status" Binding="{Binding Path=Status, Converter={StaticResource StatusAccountConverter}}" IsReadOnly="True"/>
                        <DataGridTextColumn Width="*" Header="Role" Binding="{Binding Path=RoleName}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
            </materialDesign:Card>
        </Grid>
        <StackPanel Grid.Column="1" Orientation="Vertical" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition ></RowDefinition>
                    <RowDefinition ></RowDefinition>
                </Grid.RowDefinitions>
                <!--<Grid
                  Width="auto"
                  >
                    <Button
                      Margin="5"           
                      materialDesign:ButtonProgressAssist.IsIndeterminate="True"  
                      materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"  
                      materialDesign:ButtonProgressAssist.Value="-1"
    
                      IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"  
                      Style="{StaticResource MaterialDesignOutlinedButton}"/>
                </Grid>-->
            </Grid>
            
            <Grid Margin="0 10 0 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Full Name:"/>
                <TextBox Grid.Column="1" Name="txtName"  Text="{Binding FullName,  Mode=TwoWay}"/>
            </Grid>
            <Grid Margin="0 10 0 10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Email"/>
                <TextBox Name="txtEmail" Grid.Column="1" Text="{Binding Email,  Mode=TwoWay}"/>
                </Grid>

                <Grid Margin="0 10 0 10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Password"/>
                <TextBox Grid.Column="2" Name="txtPassword" Text="{Binding Password,  Mode=TwoWay}"/>
                    </Grid>
                    <Grid Margin="0 10 0 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Gender"   VerticalAlignment="Center"/>
                <ComboBox Grid.Column="1"  HorizontalAlignment="Stretch" materialDesign:HintAssist.FontFamily="Verdana"
                    materialDesign:HintAssist.Hint="(Male or Female)"
                    ItemsSource="{Binding GenderOptions}"
                    Style="{StaticResource MaterialDesignFloatingHintComboBox}" SelectedItem="{Binding DisplayedGender,  Mode=TwoWay}" /> 
            </Grid>

            <Grid Margin="0 10 0 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Status"   VerticalAlignment="Center"/>
                <ComboBox Grid.Column="1"  HorizontalAlignment="Stretch" materialDesign:HintAssist.FontFamily="Verdana"
        materialDesign:HintAssist.Hint="(Active or Inactive)"
        ItemsSource="{Binding StatusOptions}"
        Style="{StaticResource MaterialDesignFloatingHintComboBox}" SelectedItem="{Binding DisplayedStatus,  Mode=TwoWay}" />
            </Grid>

            <Grid  Margin="0 10 0 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Role"   VerticalAlignment="Center"/>
                <ComboBox Grid.Column="1"  HorizontalAlignment="Stretch" materialDesign:HintAssist.FontFamily="Verdana"
                    materialDesign:HintAssist.Hint="(Choos Role)"
                    ItemsSource="{Binding RoleNames}"
                    Style="{StaticResource MaterialDesignFloatingHintComboBox}" SelectedItem="{Binding RoleName,  Mode=TwoWay}" />
            </Grid>

            <Grid Margin="0 10 0 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Command="{Binding AddAccountCommand}" Background="Green" Name="btnInsert" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Insert" Width="80" Margin="5" Grid.Column="0" />
                <Button Command="{Binding EditAccountCommand}" Background="Blue" Name="btnUpdate" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Update" Width="80" Margin="5" Grid.Column="1" />
                <Button Command="{Binding DeleteAccountCommand}" Background="OrangeRed" Name="btnDelete" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Delete" Width="80" Margin="5" Grid.Column="2" />


            </Grid>
        </StackPanel>
    </Grid>
</Window>
